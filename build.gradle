apply from: "$rootDir/gradle/wrapper.gradle"
apply plugin: "eclipse"

subprojects{
	apply plugin: "eclipse-cdt"
}

project(":cppunit") {
	apply plugin: "cpp-lib"
	task build (dependsOn: [mainSharedLibrary])
}

configureProjectSet("fibonacci")
configureProjectSet("fizzbuzz")
configureProjectSet("palindrome")

def configureProjectSet(name){
	project(":$name") {
		apply plugin: "cpp-lib"
		task build (dependsOn: [mainSharedLibrary])
	}
	project(":${name}test") {
		apply plugin: "cpp-exe"
		cpp {
			sourceSets {
				main {
					libs << project(":$name").libraries.main
					libs << project(":cppunit").libraries.main
				}
			}
		}
		task runTest(type:Exec, dependsOn: installMainExecutable) {
			workingDir "$buildDir/install/mainExecutable/lib"
			commandLine "./$project.name"
			environment LD_LIBRARY_PATH: "."
		}
		task build (dependsOn: runTest)
	}
}
/*
project(":spike") {
	apply plugin: "cpp-exe"
	task runTest(type:Exec, dependsOn: installMainExecutable) {
		workingDir "$buildDir/install/mainExecutable/lib"
		commandLine "./$project.name"
		environment LD_LIBRARY_PATH: "."
	}
	task build (dependsOn: runTest)
}*/

evaluationDependsOnChildren()
task clean (dependsOn: getTasksByName('clean', true))
task build (dependsOn: getTasksByName('build', true))
build.mustRunAfter clean
task cleanAndBuild(dependsOn: [clean,build])

